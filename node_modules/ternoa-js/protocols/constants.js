"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMaxBlockDuration = exports.getMaxConsentListSize = exports.getSimultaneousTransmissionLimit = exports.getProtocolsActionsInBlockLimit = void 0;
var blockchain_1 = require("../blockchain");
var constants_1 = require("../constants");
/**
 * @name getProtocolsActionsInBlockLimit
 * @summary Maximum number of actions in one block.
 * @returns Number.
 */
var getProtocolsActionsInBlockLimit = function () {
    var limit = (0, blockchain_1.consts)(constants_1.txPallets.transmissionProtocols, constants_1.chainConstants.actionsInBlockLimit);
    return Number(limit.toString());
};
exports.getProtocolsActionsInBlockLimit = getProtocolsActionsInBlockLimit;
/**
 * @name getSimultaneousTransmissionLimit
 * @summary Maximum number of simultaneous transmission protocol.
 * @returns Number.
 */
var getSimultaneousTransmissionLimit = function () {
    var limit = (0, blockchain_1.consts)(constants_1.txPallets.transmissionProtocols, constants_1.chainConstants.simultaneousTransmissionLimit);
    return Number(limit.toString());
};
exports.getSimultaneousTransmissionLimit = getSimultaneousTransmissionLimit;
/**
 * @name getMaxConsentListSize
 * @summary Maximum size for the consent list.
 * @returns Number.
 */
var getMaxConsentListSize = function () {
    var size = (0, blockchain_1.consts)(constants_1.txPallets.transmissionProtocols, constants_1.chainConstants.maxConsentListSize);
    return Number(size.toString());
};
exports.getMaxConsentListSize = getMaxConsentListSize;
/**
 * @name getMaxBlockDuration
 * @summary Maximum block duration for a protocol.
 * @returns Number.
 */
var getMaxBlockDuration = function () {
    var block = (0, blockchain_1.consts)(constants_1.txPallets.transmissionProtocols, constants_1.chainConstants.maxBlockDuration);
    return Number(block.toString());
};
exports.getMaxBlockDuration = getMaxBlockDuration;
