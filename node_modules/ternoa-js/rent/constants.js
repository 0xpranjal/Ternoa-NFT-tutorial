"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSimultaneousContractLimit = exports.getMaximumContractDurationLimit = exports.getMaximumContractAvailabilityLimit = exports.getActionsInBlockLimit = exports.getAccountSizeLimit = void 0;
var constants_1 = require("../constants");
var blockchain_1 = require("../blockchain");
/**
 * @name getAccountSizeLimit
 * @summary The maximum number of accounts that can be stored inside the account list of acceptance.
 * @returns Number.
 */
var getAccountSizeLimit = function () {
    var limit = (0, blockchain_1.consts)(constants_1.txPallets.rent, constants_1.chainConstants.accountSizeLimit);
    return limit.toNumber();
};
exports.getAccountSizeLimit = getAccountSizeLimit;
/**
 * @name getActionsInBlockLimit
 * @summary Maximum number of related automatic rent actions in block.
 * @returns Number.
 */
var getActionsInBlockLimit = function () {
    var limit = (0, blockchain_1.consts)(constants_1.txPallets.rent, constants_1.chainConstants.actionsInBlockLimit);
    return limit.toNumber();
};
exports.getActionsInBlockLimit = getActionsInBlockLimit;
/**
 * @name getMaximumContractAvailabilityLimit
 * @summary Maximum number of blocks during which a rent contract is available.
 * @returns Number.
 */
var getMaximumContractAvailabilityLimit = function () {
    var limit = (0, blockchain_1.consts)(constants_1.txPallets.rent, constants_1.chainConstants.maximumContractAvailabilityLimit);
    return limit.toNumber();
};
exports.getMaximumContractAvailabilityLimit = getMaximumContractAvailabilityLimit;
/**
 * @name getMaximumContractDurationLimit
 * @summary Maximum number of blocks that a contract can last for.
 * @returns Number.
 */
var getMaximumContractDurationLimit = function () {
    var limit = (0, blockchain_1.consts)(constants_1.txPallets.rent, constants_1.chainConstants.maximumContractDurationLimit);
    return limit.toNumber();
};
exports.getMaximumContractDurationLimit = getMaximumContractDurationLimit;
/**
 * @name getSimultaneousContractLimit
 * @summary Maximum number of simultaneous rent contract.
 * @returns Number.
 */
var getSimultaneousContractLimit = function () {
    var limit = (0, blockchain_1.consts)(constants_1.txPallets.rent, constants_1.chainConstants.simultaneousContractLimit);
    return limit.toNumber();
};
exports.getSimultaneousContractLimit = getSimultaneousContractLimit;
